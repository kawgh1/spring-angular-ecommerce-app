{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/cart-item.ts","./src/app/common/product.ts","./src/app/components/cart-details/cart-details.component.ts","./src/app/components/cart-details/cart-details.component.html","./src/app/components/cart-status/cart-status.component.ts","./src/app/components/cart-status/cart-status.component.html","./src/app/components/checkout/checkout.component.ts","./src/app/components/checkout/checkout.component.html","./src/app/components/product-category-menu/product-category-menu.component.ts","./src/app/components/product-category-menu/product-category-menu.component.html","./src/app/components/product-details/product-details.component.ts","./src/app/components/product-details/product-details.component.html","./src/app/components/product-list/product-list.component.ts","./src/app/components/product-list/product-list-grid.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/services/cart.service.ts","./src/app/services/product.service.ts","./src/app/services/shop-form.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,mBAAmB,CAAC;KAC7B;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEAEE;QACA,2EACE;QAAA,yEACE;QAAA,uEACE;QAAA,oEACF;QAAA,4DAAI;QACN,4DAAM;QAEN,uFAAuD;QA+BzD,4DAAQ;QAIR,yEACE;QACA,4EACE;QAAA,yEACE;QAAA,yEACE;QAAA,0EAEE;QAAA,yEAAyB;QAWzB,8EAAmC;QASrC,4DAAM;QACN,sEAAgC;QAClC,4DAAM;QACR,4DAAM;QACR,4DAAS;QAUT,4EAA+B;QAMjC,4DAAM;QAER,4DAAM;QAKN,0EACE;QAAA,sEACE;QAAA,sEAAI;QAAA,yEAAY;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAK;QACjC,sEAAI;QAAA,yEAAY;QAAA,sEAAU;QAAA,4DAAI;QAAA,4DAAK;QACnC,sEAAI;QAAA,yEAAY;QAAA,gEAAI;QAAA,4DAAI;QAAA,4DAAK;QAC/B,4DAAK;QACP,4DAAS;;6FDlGI,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACyC;AAChC;AACU;AAEX;AAC2D;AAC3C;AAC0B;AAGjG,8CAA8C;AAC9C,aAAa;AACb,2BAA2B;AAC3B,yCAAyC;AACc;AAC8B;AACG;AACX,CAAC,8BAA8B;AACvD;;;AAIrD,+BAA+B;AAC/B,mBAAmB;AACnB,2CAA2C;AAE3C,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,0FAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,qGAAoB,EAAE;IACzD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,6GAAuB,EAAE;IAC5D,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,oGAAoB,EAAE;IAC5D,6DAA6D;IAC7D,EAAE,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,oGAAoB,EAAE;IAC/D,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,oGAAoB,EAAE;IACrD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,oGAAoB,EAAE;IACrD,uCAAuC;IACvC,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;IACxD,iEAAiE;IACjE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;CAE3D,CAAC;AA4BK,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,+EAAc,CAAC,YAPlB;YACP,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;YAC5B,uEAAa;YACb,qEAAgB;YAChB,qEAAS;YACT,mEAAmB,CAAC,mCAAmC;SACxD;mIAIU,SAAS,mBAnBlB,2DAAY;QACZ,oGAAoB;QACpB,8HAA4B;QAC5B,mFAAe;QACf,6GAAuB;QACvB,kGAAmB;QACnB,qGAAoB;QACpB,0FAAiB,2EAGa,wCAAwC;QACtE,uEAAa;QACb,qEAAgB;QAChB,qEAAS;QACT,mEAAmB,CAAC,mCAAmC;;6FAK9C,SAAS;cArBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,oGAAoB;oBACpB,8HAA4B;oBAC5B,mFAAe;oBACf,6GAAuB;oBACvB,kGAAmB;oBACnB,qGAAoB;oBACpB,0FAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;oBAC5B,uEAAa;oBACb,qEAAgB;oBAChB,qEAAS;oBACT,mEAAmB,CAAC,mCAAmC;iBACxD;gBACD,SAAS,EAAE,CAAC,+EAAc,CAAC;gBAC3B,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACrED;AAAA;AAAO,MAAM,QAAQ;IASjB,YAAY,OAAgB;QAExB,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QAEnC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IAEtB,CAAC;CACJ;;;;;;;;;;;;;ACnBD;AAAA;AAAA,0EAA0E;AAEnE,MAAM,OAAO;CAcnB;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICKtC,yEACI;IAAA,8EACJ;IAAA,4DAAM;;;;IAUE,qEACI;IAAA,qEACI;IAAA,qEACJ;IAAA,4DAAK;IACL,qEACI;IAAA,wEAA4B;IAAA,uDAAuB;IAAA,4DAAI;IACvD,wEAA4B;IAAA,uDAA8C;;IAAA,4DAAI;IAClF,4DAAK;IACL,qEACI;IAAA,2EAII;IAAA,2EACI;IAAA,yEAAO;IAAA,sEAAU;IAAA,4DAAQ;IAEzB,sEAAyB;IAEzB,2EAEI;IAAA,8EAEI;IAFI,6XAAyC;IAE7C,oEAA2B;IAC/B,4DAAS;IAET,wDAEA;IAAA,8EAEI;IAFI,6XAAyC;IAE7C,oEAA4B;IAChC,4DAAS;IACb,4DAAM;IAGV,4DAAM;IAEV,4DAAM;IAGN,yEAA0C;IAAA,wDAEtC;;IAAA,iEACA;IAAA,iEACA;IACA,8EAC8B;IADtB,kXAA8B;IACR,kEAAM;IAAA,4DAAS;IACjD,4DAAI;IAGR,4DAAK;IACT,4DAAK;;;IAhDQ,0DAAiC;IAAjC,iKAAiC;IAGV,0DAAuB;IAAvB,qFAAuB;IACvB,0DAA8C;IAA9C,kKAA8C;IAmB9D,2DAEA;IAFA,oGAEA;IAY8B,0DAEtC;IAFsC,kNAEtC;;;IAaZ,qEACI;IAAA,oEAAqB;IACrB,yEAEI;IAAA,oEAAG;IAAA,uDAAmC;IAAA,4DAAI;IAC1C,oEAAG;IAAA,yEAAc;IAAA,4DAAI;IACrB,oEAAG;IAAA,uDAA+C;;IAAA,4DAAI;IACtD,yEAA4E;IAAA,oEAAQ;IAAA,4DAAI;IAC5F,4DAAK;IACT,4DAAK;;;IALM,0DAAmC;IAAnC,8GAAmC;IAEnC,0DAA+C;IAA/C,gLAA+C;;;IApElE,sEACI;IAAA,2EACI;IAAA,qEACI;IAAA,wEAAgB;IAAA,kEAAO;IAAA,4DAAK;IAC5B,wEAAgB;IAAA,kEAAO;IAAA,4DAAK;IAC5B,wEAAgB;IAAA,iEAAM;IAAA,4DAAK;IAC/B,4DAAK;IAEL,sHACI;IAqDJ,uHACI;IASR,4DAAQ;IACZ,4DAAM;;;IAjEM,0DAAsC;IAAtC,qFAAsC;IAsDtC,0DAA0B;IAA1B,2FAA0B;;AD7D3C,MAAM,oBAAoB;IAM/B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJ5C,cAAS,GAAe,EAAE,CAAC;QAC3B,eAAU,GAAW,CAAC,CAAC;QACvB,kBAAa,GAAW,CAAC,CAAC;IAEsB,CAAC;IAEjD,QAAQ;QAEN,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAGD,eAAe;QAEb,iCAAiC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;QAE5C,mCAAmC;QACnC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CACnC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAC/B,CAAC;QAEF,sCAAsC;QACtC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CACtC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAClC,CAAC;QAEF,wCAAwC;QACxC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;IAEvC,CAAC;IAED,iBAAiB,CAAC,WAAqB;QAErC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAC1C,CAAC;IAED,iBAAiB,CAAC,WAAqB;QAErC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;IAED,MAAM,CAAC,WAAqB;QAE1B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;;wFA/CU,oBAAoB;oGAApB,oBAAoB;QCVjC,yEACI;QAAA,yEACI;QAAA,yEAEI;QACA,gHACI;QAGJ,iHACI;QA2ER,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAlFW,0DAA6B;QAA7B,2FAA6B;QAI7B,0DAA4B;QAA5B,0FAA4B;;6FDChC,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAQ3C,MAAM,mBAAmB;IAK9B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAH5C,eAAU,GAAW,IAAI,CAAC;QAC1B,kBAAa,GAAW,CAAC,CAAC;IAEsB,CAAC;IAEjD,QAAQ;QAEN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAE1B,CAAC;IAED,gBAAgB;QAEd,mCAAmC;QACnC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAEnC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAC/B,CAAC;QAEF,sCAAsC;QACtC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAEtC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAClC,CAAC;IAEJ,CAAC;;sFA3BU,mBAAmB;mGAAnB,mBAAmB;QCRhC,yEACI;QACA,uEACI;QAOA,yEAAmB;QAAA,uDACf;;QAAA,uEAAO;QAAA,uDAAmB;QAAA,4DAAO;QACrC,4DAAM;QAEN,kEAAsD;QAC1D,4DAAI;QACR,4DAAM;;QANqB,0DACf;QADe,iKACf;QAAO,0DAAmB;QAAnB,4FAAmB;;6FDHzB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC+B;;;;;;;ICoB7C,sEACI;IAAA,mFACJ;IAAA,4DAAM;;;IAEN,sEACI;IAAA,qGACJ;IAAA,4DAAM;;;IATV,0EAGI;IAAA,qHACI;IAGJ,qHACI;IAGR,4DAAM;;;IARG,0DAAiC;IAAjC,kGAAiC;IAIjC,0DAAkC;IAAlC,mGAAkC;;;IAmBvC,sEACI;IAAA,kFACJ;IAAA,4DAAM;;;IAEN,sEACI;IAAA,oGACJ;IAAA,4DAAM;;;IATV,0EAGI;IAAA,qHACI;IAGJ,qHACI;IAGR,4DAAM;;;IARG,0DAAgC;IAAhC,iGAAgC;IAIhC,0DAAiC;IAAjC,kGAAiC;;;IAmBtC,sEACI;IAAA,8EACJ;IAAA,4DAAM;;;IAEN,sEACI;IAAA,uFACJ;IAAA,4DAAM;;;IATV,0EAGI;IAAA,qHACI;IAGJ,qHACI;IAGR,4DAAM;;;IARG,0DAA6B;IAA7B,8FAA6B;IAI7B,0DAA4B;IAA5B,6FAA4B;;;IAwBjC,6EAEI;IAAA,uDAEJ;IAAA,4DAAS;;;IAJiC,gFAAmB;IAEzD,0DAEJ;IAFI,4FAEJ;;;IA6BA,6EAEI;IAAA,uDAEJ;IAAA,4DAAS;;;IAJ2C,8EAAiB;IAEjE,0DAEJ;IAFI,0FAEJ;;;IAmCA,6EAEI;IAAA,uDAEJ;IAAA,4DAAS;;;IAJiC,gFAAmB;IAEzD,0DAEJ;IAFI,4FAEJ;;;IA6BA,6EAEI;IAAA,uDAEJ;IAAA,4DAAS;;;IAJ0C,8EAAiB;IAEhE,0DAEJ;IAFI,0FAEJ;;;IAkEA,yEACI;IAAA,uDACJ;IAAA,4DAAS;;;IADL,0DACJ;IADI,qFACJ;;;IAYA,yEACI;IAAA,uDACJ;IAAA,4DAAS;;;IADL,0DACJ;IADI,oFACJ;;ADlR7B,MAAM,iBAAiB;IAqB5B,YAAoB,WAAwB,EAClC,eAAgC,EAChC,WAAwB;QAFd,gBAAW,GAAX,WAAW,CAAa;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QAnBlC,eAAU,GAAW,CAAC,CAAC;QACvB,kBAAa,GAAW,CAAC,CAAC;QAE1B,oBAAe,GAAa,EAAE,CAAC;QAC/B,qBAAgB,GAAa,EAAE,CAAC;QAEhC,WAAW;QACX,cAAS,GAAc,EAAE,CAAC;QAG1B,wDAAwD;QACxD,0BAAqB,GAAY,EAAE,CAAC;QACpC,yBAAoB,GAAY,EAAE,CAAC;IAOG,CAAC;IAMvC,QAAQ;QAEN,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE9C,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAE/B,mBAAmB;gBACnB,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9E,kBAAkB;gBAClB,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7E,cAAc;gBACd,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC,CAAC;aACnH,CAAC;YAEF,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAEtC,MAAM,EAAE,CAAC,EAAE,CAAC;gBACZ,IAAI,EAAE,CAAC,EAAE,CAAC;gBACV,KAAK,EAAE,CAAC,EAAE,CAAC;gBACX,OAAO,EAAE,CAAC,EAAE,CAAC;gBACb,OAAO,EAAE,CAAC,EAAE,CAAC;aACd,CAAC;YAEF,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAErC,MAAM,EAAE,CAAC,EAAE,CAAC;gBACZ,IAAI,EAAE,CAAC,EAAE,CAAC;gBACV,KAAK,EAAE,CAAC,EAAE,CAAC;gBACX,OAAO,EAAE,CAAC,EAAE,CAAC;gBACb,OAAO,EAAE,CAAC,EAAE,CAAC;aACd,CAAC;YAEF,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAEjC,QAAQ,EAAE,CAAC,EAAE,CAAC;gBACd,UAAU,EAAE,CAAC,EAAE,CAAC;gBAChB,UAAU,EAAE,CAAC,EAAE,CAAC;gBAChB,YAAY,EAAE,CAAC,EAAE,CAAC;gBAClB,eAAe,EAAE,CAAC,EAAE,CAAC;gBACrB,cAAc,EAAE,CAAC,EAAE,CAAC;aACrB,CAAC;SACH,CAAC,CAAC;QAKH,8BAA8B;QAC9B,MAAM,UAAU,GAAW,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,UAAU,CAAC,CAAC;QAEzC,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,SAAS,CAE5D,IAAI,CAAC,EAAE;YAEL,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACrE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC,CACF,CAAC;QAIF,6BAA6B;QAC7B,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAEjD,IAAI,CAAC,EAAE;YAEL,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACpE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC9B,CAAC,CACF,CAAC;QAIF,+DAA+D;QAC/D,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS;QAE3C,2BAA2B;QAC3B,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAE5D,mFAAmF;YACnF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CACF,CAAC;QAEF,wCAAwC;QACxC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,qDAAqD;IACrD,IAAI,SAAS,KAAK,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;IAC5E,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;IAC1E,IAAI,KAAK,KAAK,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAEpE,iBAAiB;QAEf,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAEtC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,GAAG,aAAa,CAEpD,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAEnC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,CAE3C,CAAC;IAEJ,CAAC;IAID,QAAQ;QAEN,UAAU;QAEV,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC;QAE1D,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEnG,OAAO,CAAC,GAAG,CAAC,iCAAiC,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC3G,OAAO,CAAC,GAAG,CAAC,mCAAmC,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACjH,CAAC;IAKD,mCAAmC,CAAC,KAAK;QAEvC,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE;YAExB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,cAAc;iBAC3C,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAEnE,uFAAuF;YACvF,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC;SAExD;aACI;YAEH,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAEvD,kCAAkC;YAClC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;SAChC;IAEH,CAAC;IAQD,oBAAoB;QAElB,MAAM,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAErE,MAAM,WAAW,GAAW,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACrD,MAAM,YAAY,GAAW,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAE9E,0EAA0E;QAE1E,IAAI,UAAkB,CAAC;QAEvB,IAAI,WAAW,KAAK,YAAY,EAAE;YAEhC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;SACxC;aACI;YAEH,UAAU,GAAG,CAAC,CAAC,CAAC,+CAA+C;SAChE;QAED,oCAAoC;QACpC,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,SAAS,CAE5D,IAAI,CAAC,EAAE;YAEL,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACrE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC,CACF,CAAC;IACJ,CAAC;IAKD,SAAS,CAAC,aAAqB;QAE7B,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAE5D,qEAAqE;QACrE,oEAAoE;QAEpE,wDAAwD;QAExD,MAAM,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;QACjD,MAAM,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;QAEjD,OAAO,CAAC,GAAG,CAAC,GAAG,aAAa,kBAAkB,WAAW,EAAE,CAAC,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,GAAG,aAAa,kBAAkB,WAAW,EAAE,CAAC,CAAC;QAG7D,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,SAAS,CAEnD,IAAI,CAAC,EAAE;YAEL,IAAI,aAAa,KAAK,iBAAiB,EAAE;gBAEvC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;aAEnC;iBACI;gBAEH,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;aAClC;YAED,+BAA+B;YAC/B,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,CACF,CAAC;IACJ,CAAC;;kFA5PU,iBAAiB;iGAAjB,iBAAiB;QCZ9B,yEACI;QAAA,yEAEI;QAAA,yEAEI;QACA,0EAEI;QAFkC,6IAAY,cAAU,IAAC;QAGzD,yEACI;QAAA,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QAEjB,yEACI;QAAA,yEAAsB;QAAA,wEAAO;QAAA,sEAAU;QAAA,4DAAQ;QAAA,4DAAM;QACrD,0EACI;QAAA,0EACI;QAAA,uEACA;QACA,gHAGI;QASR,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EAAsB;QAAA,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QAAA,4DAAM;QACpD,0EACI;QAAA,0EACI;QAAA,wEAEA;QACA,gHAGI;QASR,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EAAsB;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QAAA,4DAAM;QAChD,0EACI;QAAA,0EACI;QAAA,wEAEA;QACA,gHAGI;QAWR,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QAIN,2EACI;QAAA,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QAEzB,0EACI;QAAA,0EAAsB;QAAA,yEAAO;QAAA,mEAAO;QAAA,4DAAQ;QAAA,4DAAM;QAClD,0EACI;QAAA,0EACI;QAAA,8EACI;QAD8B,4IAAU,cAAU,iBAAiB,CAAC,IAAC;QAErE,sHAEI;QAGR,4DAAS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EAAsB;QAAA,yEAAO;QAAA,kEAAM;QAAA,4DAAQ;QAAA,4DAAM;QACjD,0EACI;QAAA,0EACI;QAAA,wEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EAAsB;QAAA,yEAAO;QAAA,gEAAI;QAAA,4DAAQ;QAAA,4DAAM;QAC/C,0EACI;QAAA,0EACI;QAAA,wEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EAAsB;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QAAA,4DAAM;QAChD,0EACI;QAAA,0EACI;QAAA,8EACI;QAAA,sHAEI;QAGR,4DAAS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EAAsB;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QAAA,4DAAM;QACnD,0EACI;QAAA,0EACI;QAAA,wEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QAGN,0EACI;QAAA,6EACI;QAAA,6EACA;QADuB,iJAAU,+CAA2C,IAAC;QAA7E,4DACA;QAAA,uEAAkC;QAAA,qGACtC;QAAA,4DAAQ;QACZ,4DAAM;QAGN,2EACI;QAAA,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QAExB,0EACI;QAAA,0EAAsB;QAAA,yEAAO;QAAA,mEAAO;QAAA,4DAAQ;QAAA,4DAAM;QAClD,0EACI;QAAA,0EACI;QAAA,8EACI;QAD8B,4IAAU,cAAU,gBAAgB,CAAC,IAAC;QAEpE,sHAEI;QAGR,4DAAS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EAAsB;QAAA,yEAAO;QAAA,kEAAM;QAAA,4DAAQ;QAAA,4DAAM;QACjD,0EACI;QAAA,0EACI;QAAA,wEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EAAsB;QAAA,yEAAO;QAAA,gEAAI;QAAA,4DAAQ;QAAA,4DAAM;QAC/C,0EACI;QAAA,0EACI;QAAA,yEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,2EAAsB;QAAA,0EAAO;QAAA,kEAAK;QAAA,4DAAQ;QAAA,4DAAM;QAChD,2EACI;QAAA,2EACI;QAAA,+EACI;QAAA,wHAEI;QAGR,4DAAS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,2EAAsB;QAAA,0EAAO;QAAA,qEAAQ;QAAA,4DAAQ;QAAA,4DAAM;QACnD,2EACI;QAAA,2EACI;QAAA,yEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QAGN,4EACI;QAAA,uEAAI;QAAA,wEAAW;QAAA,4DAAK;QAEpB,2EACI;QAAA,2EAAsB;QAAA,0EAAO;QAAA,sEAAS;QAAA,4DAAQ;QAAA,4DAAM;QACpD,2EACI;QAAA,2EACI;QAAA,+EACI;QAAA,2EAAQ;QAAA,iEAAI;QAAA,4DAAS;QACrB,2EAAQ;QAAA,uEAAU;QAAA,4DAAS;QAC3B,2EAAQ;QAAA,6EAAgB;QAAA,4DAAS;QACrC,4DAAS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,2EAAsB;QAAA,0EAAO;QAAA,yEAAY;QAAA,4DAAQ;QAAA,4DAAM;QACvD,2EACI;QAAA,2EACI;QAAA,yEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,2EAAsB;QAAA,0EAAO;QAAA,wEAAW;QAAA,4DAAQ;QAAA,4DAAM;QACtD,2EACI;QAAA,2EACI;QAAA,yEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,2EAAsB;QAAA,0EAAO;QAAA,0EAAa;QAAA,4DAAQ;QAAA,4DAAM;QACxD,2EACI;QAAA,2EACI;QAAA,yEACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,2EAAsB;QAAA,0EAAO;QAAA,6EAAgB;QAAA,4DAAQ;QAAA,4DAAM;QAC3D,2EACI;QAAA,2EACI;QAAA,+EACI;QAAA,wHACI;QAER,4DAAS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,2EAAsB;QAAA,0EAAO;QAAA,4EAAe;QAAA,4DAAQ;QAAA,4DAAM;QAC1D,2EACI;QAAA,2EACI;QACA,+EACI;QADqC,6IAAU,0BAAsB,IAAC;QACtE,wHACI;QAER,4DAAS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;QAGV,4DAAM;QAGN,4EACI;QAAA,uEAAI;QAAA,yEAAY;QAAA,4DAAK;QAErB,sEAAG;QAAA,yDAAmC;QAAA,4DAAI;QAC1C,sEAAG;QAAA,2EAAc;QAAA,4DAAI;QACrB,sEAAG;QAAA,yDAA+C;;QAAA,4DAAI;QAC1D,4DAAM;QAKN,4EACI;QAAA,+EAA2C;QAAA,qEAAQ;QAAA,4DAAS;QAChE,4DAAM;QAEV,4DAAO;QAEX,4DAAM;QAEV,4DAAM;QACV,4DAAM;;QAtTY,0DAA+B;QAA/B,4FAA+B;QAYZ,2DAAmE;QAAnE,yIAAmE;QAuBnE,0DAAgE;QAAhE,sIAAgE;QAuBhE,0DAAuD;QAAvD,6HAAuD;QA+BhD,2DAAiC;QAAjC,kFAAiC;QAiCjC,2DAA2C;QAA3C,8FAA2C;QAuC3C,2DAAiC;QAAjC,kFAAiC;QAiCjC,2DAA0C;QAA1C,6FAA0C;QAsE1C,2DAAsC;QAAtC,yFAAsC;QActC,0DAAoC;QAApC,wFAAoC;QAezD,0DAAmC;QAAnC,2GAAmC;QAEnC,0DAA+C;QAA/C,gLAA+C;;6FDjSzD,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICMtC,qEACI;IAEA,uEAGI;IAAA,uDAEJ;IAAA,4DAAI;IAER,4DAAK;;;IAPE,0DAA0F;IAA1F,yKAA0F;IAGzF,0DAEJ;IAFI,+GAEJ;;ADJT,MAAM,4BAA4B;IAIvC,yBAAyB;IACzB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEvD,QAAQ;QAEN,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,qBAAqB;QAEnB,IAAI,CAAC,cAAc,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAElD,IAAI,CAAC,EAAE;YAEL,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAE1D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAChC,CAAC,CACF,CAAC;IACJ,CAAC;;wGAvBU,4BAA4B;4GAA5B,4BAA4B;QCVzC,yEACI;QAAA,yEACI;QAAA,wEAII;QAAA,sHACI;QA2BR,4DAAK;QACT,4DAAM;QACV,4DAAM;;QA9BU,0DAAqD;QAArD,0FAAqD;;6FDIxD,4BAA4B;cALxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,WAAW,EAAE,wCAAwC;gBACrD,SAAS,EAAE,CAAC,uCAAuC,CAAC;aACrD;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACD;AAIG;;;;;;AAO7C,MAAM,uBAAuB;IAclC,sBAAsB;IACtB,YAAoB,cAA8B,EACxC,WAAwB,EACxB,KAAqB;QAFX,mBAAc,GAAd,cAAc,CAAgB;QACxC,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QAf/B,2EAA2E;QAC3E,oGAAoG;QAEpG,wFAAwF;QACxF,kDAAkD;QAClD,+FAA+F;QAC/F,wFAAwF;QACxF,6EAA6E;QAC7E,iEAAiE;QACjE,YAAO,GAAY,IAAI,8DAAO,EAAE,CAAC;IAME,CAAC;IAEpC,QAAQ;QAEN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE;YAEjC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC/B,CAAC,CAAC;IACJ,CAAC;IAGD,qBAAqB;QAEnB,gFAAgF;QAChF,MAAM,YAAY,GAAW,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAErE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,SAAS,CAEpD,IAAI,CAAC,EAAE;YAEL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEtB,CAAC,CACF;IACH,CAAC;IAED,SAAS;QAEP,OAAO,CAAC,GAAG,CAAC,oBAAoB,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;QAEhF,MAAM,WAAW,GAAG,IAAI,iEAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE/C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAE1C,CAAC;;8FAnDU,uBAAuB;uGAAvB,uBAAuB;QCZpC,yEACI;QAAA,yEAEI;QAEA,oEAEA;QAAA,qEAAI;QAAA,uDAAkB;QAAA,4DAAK;QAE3B,yEAAmB;QAAA,uDAAyC;;QAAA,4DAAM;QAElE,4EAA6D;QAArD,+IAAS,eAAW,IAAC;QAAgC,sEAAW;QAAA,4DAAS;QAEjF,iEACA;QAAA,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,qEAAG;QAAA,wDAAyB;QAAA,4DAAI;QAIhC,wEAAuC;QAAA,4EAAgB;QAAA,4DAAI;QAG/D,4DAAM;QAEV,4DAAM;;QAnBO,0DAA4B;QAA5B,6JAA4B;QAE7B,0DAAkB;QAAlB,iFAAkB;QAEH,0DAAyC;QAAzC,8JAAyC;QAMzD,0DAAyB;QAAzB,wFAAyB;;6FDHvB,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKE;;;;;;;;;;ICMpC,yEAEI;IAAA,yEAEI;IACA,wEACI;IAAA,qEACJ;IAAA,4DAAI;IAGJ,wEACI;IAAA,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IACnC,4DAAI;IAEJ,0EAAmB;IAAA,uDAA4C;;IAAA,4DAAM;IACrE,8EAAwE;IAAhE,6WAAgC;IAAgC,uEAAW;IAAA,4DAAS;IAChG,4DAAM;IAEV,4DAAM;;;IAbK,0DAA2C;IAA3C,uHAA2C;IACrC,0DAAgC;IAAhC,gKAAgC;IAItC,0DAA2C;IAA3C,uHAA2C;IACtC,0DAAsB;IAAtB,oFAAsB;IAGX,0DAA4C;IAA5C,iKAA4C;;;IAOvE,0EACI;IAAA,sFACJ;IAAA,4DAAM;;;;IAON,0EACI;IAAA,qEAA4B;IAE5B,0EACI;IAAA,yEAEI;IAAA,qFAIiB;IAJD,4VAAwB;IAIxC,4DAAiB;IAErB,4DAAM;IAEN,0EACI;IAAA,2EAAmB;IAAA,oEAAS;IAAA,4DAAO;IAEnC,6EACI;IADI,yVAA8C;IAClD,yEAAQ;IAAA,6DAAC;IAAA,4DAAS;IAClB,8EAAwB;IAAA,6DAAC;IAAA,4DAAS;IAClC,0EAAQ;IAAA,8DAAE;IAAA,4DAAS;IACnB,0EAAQ;IAAA,8DAAE;IAAA,4DAAS;IACnB,0EAAQ;IAAA,8DAAE;IAAA,4DAAS;IACvB,4DAAS;IACb,4DAAM;IAGV,4DAAM;IAEV,4DAAM;;;IAvBsB,0DAAwB;IAAxB,sFAAwB;;ADjC7D,MAAM,oBAAoB;IAe/B,YAAoB,cAA8B,EACxC,WAAwB,EACxB,KAAqB;QAFX,mBAAc,GAAd,cAAc,CAAgB;QACxC,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QAf/B,aAAQ,GAAc,EAAE,CAAC;QACzB,sBAAiB,GAAW,CAAC,CAAC;QAC9B,uBAAkB,GAAW,CAAC,CAAC;QAE/B,eAAU,GAAY,KAAK,CAAC;QAE5B,gCAAgC;QAChC,kBAAa,GAAW,CAAC,CAAC;QAC1B,gBAAW,GAAW,CAAC,CAAC;QACxB,qBAAgB,GAAW,CAAC,CAAC;QAE7B,oBAAe,GAAW,IAAI,CAAC;IAII,CAAC;IAEpC,QAAQ;QAEN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE;YACjC,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IAGL,CAAC;IAED,8CAA8C;IAC9C,kDAAkD;IAClD,4EAA4E;IAE5E,YAAY;QAEV,+CAA+C;QAC/C,yEAAyE;QAEzE,uBAAuB;QACvB,kFAAkF;QAClF,sEAAsE;QAEtE,mCAAmC;QACnC,yEAAyE;QACzE,IAAI;QACJ,SAAS;QACT,8DAA8D;QAC9D,gCAAgC;QAChC,wCAAwC;QACxC,IAAI;QAEJ,oDAAoD;QACpD,wEAAwE;QAExE,cAAc;QACd,4BAA4B;QAC5B,MAAM;QACN,KAAK;QAEL,+DAA+D;QAC/D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAE9D,sCAAsC;QACtC,IAAI,IAAI,CAAC,UAAU,EAAE;YAEnB,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,oCAAoC;SACrC;aAAM;YAEL,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;IAEH,CAAC;IAGD,oBAAoB;QAElB,MAAM,UAAU,GAAW,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEvE,2EAA2E;QAE3E,IAAI,IAAI,CAAC,eAAe,IAAI,UAAU,EAAE;YACtC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;SACxB;QAED,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;QAElC,OAAO,CAAC,GAAG,CAAC,WAAW,UAAU,mBAAmB,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QAE1E,kDAAkD;QAClD,4DAA4D;QAE5D,cAAc;QAEd,4BAA4B;QAE5B,MAAM;QACN,KAAK;QAEL,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,EAC/D,IAAI,CAAC,WAAW,EAChB,UAAU,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;IAEhD,CAAC;IAGD,kBAAkB;QAEhB,4CAA4C;QAC5C,MAAM,aAAa,GAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEtE,IAAI,aAAa,EAAE;YACjB,6EAA6E;YAC7E,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAEjE,8BAA8B;YAC9B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACrE;aACI;YACH,yDAAyD;YACzD,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;SACpC;QAED,sBAAsB;QACtB,EAAE;QACF,6DAA6D;QAC7D,uEAAuE;QACvE,EAAE;QAEF,oDAAoD;QACpD,qCAAqC;QACrC,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACrD,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;SACxB;QAED,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAEjD,OAAO,CAAC,GAAG,CAAC,qBAAqB,IAAI,CAAC,iBAAiB,mBAAmB,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QAKhG,iDAAiD;QACjD,wEAAwE;QAExE,cAAc;QACd,4BAA4B;QAC5B,MAAM;QACN,KAAK;QAEL,mDAAmD;QACnD,2DAA2D;QAC3D,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,EAC/D,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,iBAAiB,CAAC;aACtB,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;IAErC,CAAC;IAED,mDAAmD;IACnD,0EAA0E;IAC1E,qFAAqF;IACrF,aAAa;QAEX,OAAO,IAAI,CAAC,EAAE;YAEZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,0CAA0C;YACrF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YAClC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,iDAAiD;QAEpG,CAAC,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,QAAgB;QAC7B,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAID,sBAAsB;IACtB,SAAS,CAAC,UAAmB;QAE3B,OAAO,CAAC,GAAG,CAAC,mBAAmB,UAAU,CAAC,IAAI,KAAK,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC;QAE3E,4BAA4B;QAC5B,MAAM,WAAW,GAAG,IAAI,iEAAQ,CAAC,UAAU,CAAC,CAAC;QAE7C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAC1C,CAAC;;wFAhMU,oBAAoB;oGAApB,oBAAoB;QCdjC,yEACI;QAAA,yEAEI;QAAA,qEAAI;QAAA,uDAAyB;QAAA,4DAAK;QAClC,gEAEA;QACA,yEACI;QAAA,yEAEI;QACA,iHAEI;QAmBJ,gHACI;QAGR,4DAAM;QAGN,yEACI;QACA,mHACI;QA6BR,4DAAM;QAGV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAzEM,0DAAyB;QAAzB,wFAAyB;QAQhB,0DAAoC;QAApC,iFAAoC;QAqBpC,0DAA6B;QAA7B,0HAA6B;QAS7B,0DAA6B;QAA7B,2FAA6B;;6FD3BrC,oBAAoB;cAPhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,gDAAgD;gBAChD,sDAAsD;gBACtD,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAkD;;;AAQ3C,MAAM,eAAe;IAE1B,6CAA6C;IAC7C,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,QAAQ;IACR,CAAC;IAED,0DAA0D;IAC1D,iDAAiD;IACjD,QAAQ,CAAC,KAAa;QACpB,OAAO,CAAC,GAAG,CAAC,SAAS,KAAK,EAAE,CAAC,CAAC;QAE9B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,KAAK,EAAE,CAAC,CAAC;IAChD,CAAC;;8EAdU,eAAe;+FAAf,eAAe;;QCR5B,yEAEI;QAAA,8EAGA;QAFI,8RAAe,uBAAuB,IAAC;QAD3C,4DAGA;QAAA,4EACI;QADI,mRAAS,uBAAuB,IAAC;QACrC,mEACJ;QAAA,4DAAS;QAEb,4DAAM;;6FDDO,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAA2C;AAEG;;AAKvC,MAAM,WAAW;IAQtB;QAHA,eAAU,GAA0B,IAAI,kDAAa,EAAU,CAAC;QAChE,kBAAa,GAA0B,IAAI,kDAAa,EAAU,CAAC;QAIjE,uEAAuE;QACvE,4FAA4F;QAC5F,6CAA6C;QAC7C,+EAA+E;QAC/E,oFAAoF;QACpF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAE,GAAG,IAAI,CAAC,CAAC;YACxE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACzD,CAAC;IAED,8GAA8G;IAC9G,mFAAmF;IACnF,mEAAmE;IACnE,gBAAgB;QACd,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACtE,CAAC;IAGD,SAAS,CAAC,WAAqB;QAE7B,gDAAgD;QAChD,IAAI,mBAAmB,GAAY,KAAK,CAAC;QACzC,IAAI,gBAAgB,GAAa,SAAS,CAAC;QAG3C,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAE7B,6CAA6C;YAC7C,6CAA6C;YAE7C,8CAA8C;YAC9C,uCAAuC;YACvC,aAAa;YACb,MAAM;YACN,IAAI;YAEJ,uBAAuB;YACvB,yFAAyF;YACzF,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,KAAK,WAAW,CAAC,EAAE,CAAC,CAAC;YAG3F,uBAAuB;YACvB,mBAAmB,GAAG,CAAC,gBAAgB,IAAI,SAAS,CAAC,CAAC;SAEvD;QAED,IAAI,mBAAmB,EAAE;YACvB,yBAAyB;YACzB,gBAAgB,CAAC,QAAQ,EAAE,CAAC;SAC7B;aAAM;YACL,iCAAiC;YACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAClC;QAED,8CAA8C;QAC9C,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAE3B,CAAC;IAED,iBAAiB;QAEf,IAAI,eAAe,GAAW,CAAC,CAAC;QAChC,IAAI,kBAAkB,GAAW,CAAC,CAAC;QAEnC,KAAK,IAAI,eAAe,IAAI,IAAI,CAAC,SAAS,EAAE;YAC1C,eAAe,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC;YAC1E,kBAAkB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;SAClD;QAED,uEAAuE;QACvE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAE5C,yDAAyD;QAEzD,4CAA4C;QAC5C,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC;QAEtD,oDAAoD;QACpD,sEAAsE;QACtE,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,WAAW,CAAC,eAAuB,EAAE,kBAA0B;QAE7D,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAE/B,KAAK,IAAI,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE;YAEvC,MAAM,aAAa,GAAG,YAAY,CAAC,QAAQ,GAAG,YAAY,CAAC,SAAS,CAAC;YAErE,OAAO,CAAC,GAAG,CAAC,SAAS,YAAY,CAAC,IAAI,cAAc,YAAY,CAAC,QAAQ;gCAC/C,YAAY,CAAC,SAAS,mBAAmB,aAAa,EAAE,CAAC,CAAC;SACrF;QAGD,OAAO,CAAC,GAAG,CAAC,eAAe,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,oBAAoB,kBAAkB,EAAE,CAAC,CAAC;QAC/F,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IAGD,iBAAiB,CAAC,WAAqB;QAErC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAEvB,IAAI,WAAW,CAAC,QAAQ,KAAK,CAAC,EAAE;YAC9B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC1B;aACI;YACH,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAE1B;IACH,CAAC;IACD,MAAM,CAAC,WAAqB;QAE1B,4EAA4E;QAC5E,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,KAAK,WAAW,CAAC,EAAE,CAAC,CAAC;QAE/F,8DAA8D;QAC9D,IAAI,SAAS,GAAG,CAAC,CAAC,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAEpC,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;;sEArIU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIN;;;AAM9B,MAAM,cAAc;IAazB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAR1C,uEAAuE;QAE/D,YAAO,GAAG,iEAAiE,CAAC,CAAC,YAAY;QAEjG,sEAAsE;QAE9D,gBAAW,GAAG,yEAAyE,CAAC;IAElD,CAAC;IAI/C,mEAAmE;IACnE,qEAAqE;IACrE,UAAU,CAAC,YAAoB;QAE7B,wCAAwC;QACxC,MAAM,UAAU,GAAG,GAAG,IAAI,CAAC,OAAO,IAAI,YAAY,EAAE,CAAC;QAErD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,UAAU,CAAC,CAAC;IAElD,CAAC;IAED,uFAAuF;IACvF,cAAc,CAAC,aAAqB;QAElC,yCAAyC;QAEzC,gFAAgF;QAChF,gFAAgF;QAEhF,yFAAyF;QAEzF,MAAM,SAAS,GAAG,GAAG,IAAI,CAAC,OAAO,+BAA+B,aAAa,EAAE,CAAC;QAEhF,8DAA8D;QAC9D,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAGrC,CAAC;IAID,gBAAgB;IACR,WAAW,CAAC,SAAiB;QACnC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAsB,SAAS,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChH,CAAC;IAID,kCAAkC;IAClC,sBAAsB,CAAC,OAAe,EAAE,WAAmB,EACzD,aAAqB;QAErB,oEAAoE;QAEpE,gFAAgF;QAChF,gFAAgF;QAEhF,yFAAyF;QAEzF,sFAAsF;QACtF,4EAA4E;QAC5E,oDAAoD;QAEpD,MAAM,SAAS,GAAG,GAAG,IAAI,CAAC,OAAO,+BAA+B,aAAa,EAAE;cAC3E,SAAS,OAAO,SAAS,WAAW,EAAE,CAAC;QAE3C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAsB,SAAS,CAAC,CAAC;IAE7D,CAAC;IAGD,cAAc,CAAC,UAAkB;QAE/B,oDAAoD;QAEpD,MAAM,SAAS,GAAG,GAAG,IAAI,CAAC,OAAO,yCAAyC,UAAU,GAAG,CAAC;QAExF,8DAA8D;QAC9D,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAErC,CAAC;IAED,oCAAoC;IACpC,sBAAsB,CAAC,OAAe,EAAE,WAAmB,EACzD,UAAkB;QAElB,oEAAoE;QAEpE,gFAAgF;QAChF,gFAAgF;QAEhF,yFAAyF;QAEzF,sFAAsF;QACtF,4EAA4E;QAC5E,oDAAoD;QAEpD,MAAM,SAAS,GAAG,GAAG,IAAI,CAAC,OAAO,qCAAqC,UAAU,EAAE;cAC9E,SAAS,OAAO,SAAS,WAAW,EAAE,CAAC;QAE3C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAsB,SAAS,CAAC,CAAC;IAE7D,CAAC;IAGD,wBAAwB;IACxB,oEAAoE;IACpE,8DAA8D;IAC9D,oBAAoB;QAElB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA6B,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAC3E,0DAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,eAAe,CAAC,CACpD,CAAC;IACJ,CAAC;;4EAxHU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACL;AAID;;;AAK9B,MAAM,eAAe;IAQ1B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QANlC,iBAAY,GAAG,qCAAqC,CAAC;QACrD,cAAS,GAAG,kCAAkC,CAAC;IAKT,CAAC;IAO/C,8DAA8D;IAC9D,0BAA0B;IAE1B,mBAAmB,CAAC,UAAkB;QAEpC,IAAI,IAAI,GAAa,EAAE,CAAC;QAExB,yCAAyC;QACzC,0CAA0C;QAE1C,KAAK,IAAI,QAAQ,GAAG,UAAU,EAAE,QAAQ,IAAI,EAAE,EAAE,QAAQ,EAAE,EAAE;YAE1D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACrB;QAED,mEAAmE;QACnE,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC;IAED,kBAAkB;QAEhB,IAAI,IAAI,GAAa,EAAE,CAAC;QAExB,wCAAwC;QACxC,oDAAoD;QAEpD,MAAM,SAAS,GAAW,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACnD,MAAM,OAAO,GAAW,SAAS,GAAG,EAAE,CAAC;QAEvC,KAAK,IAAI,OAAO,GAAG,SAAS,EAAE,OAAO,IAAI,OAAO,EAAE,OAAO,EAAE,EAAE;YAE3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACpB;QAED,mEAAmE;QACnE,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC;IAOD,iEAAiE;IACjE,+BAA+B;IAC/B,YAAY;QAEV,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAuB,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI;QAEtE,0CAA0C;QAC1C,0DAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,CAC9C,CAAC;IACJ,CAAC;IAID,SAAS,CAAC,cAAsB;QAE9B,4EAA4E;QAC5E,MAAM,eAAe,GAAG,GAAG,IAAI,CAAC,SAAS,kCAAkC,cAAc,EAAE,CAAC;QAE5F,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAoB,eAAe,CAAC,CAAC,IAAI;QAEjE,0CAA0C;QAC1C,0DAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAC3C,CAAC;IACJ,CAAC;;8EAjFU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-ecommerce';\r\n}\r\n","<div class=\"page-wrapper\">\r\n\r\n  <!-- MENU SIDEBAR-->\r\n  <aside class=\"menu-sidebar d-none d-lg-block\">\r\n    <div class=\"logo\">\r\n      <a routerLink=\"/products\">\r\n        <img src=\"assets/images/logo.png\" style=\"height: 75px;\" alt=\"techtonics\" class=\"img-responsive\">\r\n      </a>\r\n    </div>\r\n\r\n    <app-product-category-menu></app-product-category-menu>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <!-- this code was cut and moved to product-category-menu.component.html -->\r\n    <!-- <div class=\"menu-sidebar-content js-scrollbar1\">\r\n        <nav class=\"navbar-sidebar\">\r\n          <ul class=\"list-unstyled navbar-list\">\r\n            <li>\r\n              <!-- replace href with router link \r\n        <a href=\"#\">Books</a>  \r\n      <a routerLink=\"/category/1\" routerLinkActive=\"active-link\">Books</a>\r\n      </li>\r\n      <li>\r\n        <!-- replace href with router link \r\n        <!--  <a href=\"#\">Coffee Mugs</a>  \r\n        <a routerLink=\"/category/2\" routerLinkActive=\"active-link\">Mugs</a>\r\n      </li>\r\n      <!-- <li>\r\n              <a href=\"#\">Mouse Pads</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">Luggage Tags</a>\r\n            </li>\r\n      </ul>\r\n      </nav>\r\n  </div> -->\r\n  </aside>\r\n  <!-- END MENU SIDEBAR-->\r\n\r\n  <!-- PAGE CONTAINER-->\r\n  <div class=\"page-container\">\r\n    <!-- HEADER DESKTOP-->\r\n    <header class=\"header-desktop\">\r\n      <div class=\"section-content section-content-p30\">\r\n        <div class=\"container-fluid\">\r\n          <div class=\"header-wrap\">\r\n\r\n            <app-search></app-search>\r\n\r\n\r\n            <!-- this code was cut and moved to search.component.html -->\r\n            <!-- <form class=\"form-header\" onsubmit=\"return false;\" method=\"GET\">\r\n              <input class=\"au-input au-input-xl\" type=\"text\" name=\"search\" placeholder=\"Search for data ...\" />\r\n              <button class=\"au-btn-submit\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> -->\r\n\r\n            <app-cart-status></app-cart-status>\r\n\r\n\r\n            <!-- this code was cut a moved to cart-status.component.html -->\r\n            <!-- <div class=\"cart-area d-n\">\r\n              <a href=\"shopping-detail.html\">\r\n                <div class=\"total\">19.22 <span> 2</span> </div> <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\r\n              </a>\r\n            </div> -->\r\n          </div>\r\n          <div class=\"account-wrap\"></div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n    <!-- END HEADER DESKTOP-->\r\n\r\n    <!-- MAIN CONTENT -->\r\n    <!-- instead of using app-product-list directly, \r\n           we want to use the ROUTER OUTLET, which acts as a place holder\r\n          and selects the desired route based on user click or input -->\r\n\r\n\r\n    <!-- <app-product-list></app-product-list> -->\r\n    <router-outlet></router-outlet>\r\n\r\n\r\n\r\n\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<!-- ENDS PAGE CONTAINER -->\r\n\r\n\r\n<footer>\r\n  <ul>\r\n    <li><a href=\"#\">About Us</a></li>\r\n    <li><a href=\"#\">Contact Us</a></li>\r\n    <li><a href=\"#\">Help</a></li>\r\n  </ul>\r\n</footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ProductListComponent } from './components/product-list/product-list.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ProductService } from 'src/app/services/product.service';\r\n\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductCategoryMenuComponent } from './components/product-category-menu/product-category-menu.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\r\n\r\n\r\n// Pagination required installing ng-bootstrap\r\n// had to run\r\n// ng add @angular/localize\r\n// npm install @ng-bootstrap/ng-bootstrap\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CartStatusComponent } from './components/cart-status/cart-status.component';\r\nimport { CartDetailsComponent } from './components/cart-details/cart-details.component';\r\nimport { CheckoutComponent } from './components/checkout/checkout.component'; // ng-bootstrap for pagination\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n// Order of routes is important\r\n// First Match wins\r\n// Start from most specific to most generic\r\n\r\nconst routes: Routes = [\r\n  { path: 'checkout', component: CheckoutComponent },\r\n  { path: 'cart-details', component: CartDetailsComponent },\r\n  { path: 'products/:id', component: ProductDetailsComponent },\r\n  { path: 'search/:keyword', component: ProductListComponent },\r\n  // { path: 'category/:id', component: ProductListComponent },\r\n  { path: 'category/:id/:name', component: ProductListComponent },\r\n  { path: 'category', component: ProductListComponent },\r\n  { path: 'products', component: ProductListComponent },\r\n  // if no path specified, go to products\r\n  { path: '', redirectTo: '/products', pathMatch: 'full' },\r\n  // if any other path entered besides what's above, go to products\r\n  { path: '**', redirectTo: '/products', pathMatch: 'full' }\r\n\r\n];\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProductListComponent,\r\n    ProductCategoryMenuComponent,\r\n    SearchComponent,\r\n    ProductDetailsComponent,\r\n    CartStatusComponent,\r\n    CartDetailsComponent,\r\n    CheckoutComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(routes), // Then configure Router based on Routes\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    NgbModule, // ng module for pagination from ng-bootstrap\r\n    ReactiveFormsModule // gives support for Reactive Forms\r\n  ],\r\n  providers: [ProductService], // this allows us to inject the ProductService into other parts of the application\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Product } from './product';\r\n\r\nexport class CartItem {\r\n\r\n    id: string;\r\n    name: string;\r\n    imageUrl: string;\r\n    unitPrice: number;\r\n\r\n    quantity: number;\r\n\r\n    constructor(product: Product) {\r\n\r\n        this.id = product.id;\r\n        this.name = product.name;\r\n        this.imageUrl = product.imageUrl;\r\n        this.unitPrice = product.unitPrice;\r\n\r\n        this.quantity = 1;\r\n\r\n    }\r\n}\r\n","\r\n\r\n// this matches the data coming back as JSON from the Spring Data REST API\r\n\r\nexport class Product {\r\n\r\n    id: string;\r\n    sku: string;\r\n    name: string;\r\n    description: string;\r\n    unitPrice: number;\r\n    imageUrl: string;\r\n    active: boolean;\r\n    unitsInStock: number;\r\n    dateCreated: Date;\r\n    lastUpdated: Date;\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CartItem } from 'src/app/common/cart-item';\r\nimport { _ParseAST } from '@angular/compiler';\r\nimport { CartService } from 'src/app/services/cart.service';\r\n\r\n@Component({\r\n  selector: 'app-cart-details',\r\n  templateUrl: './cart-details.component.html',\r\n  styleUrls: ['./cart-details.component.css']\r\n})\r\nexport class CartDetailsComponent implements OnInit {\r\n\r\n  cartItems: CartItem[] = [];\r\n  totalPrice: number = 0;\r\n  totalQuantity: number = 0;\r\n\r\n  constructor(private cartService: CartService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.listCartDetails();\r\n  }\r\n\r\n\r\n  listCartDetails() {\r\n\r\n    // get a handle to the cart items\r\n    this.cartItems = this.cartService.cartItems;\r\n\r\n    // subscribe to the cart totalPrice\r\n    this.cartService.totalPrice.subscribe(\r\n      data => this.totalPrice = data\r\n    );\r\n\r\n    // subscribe to the cart totalQuantity\r\n    this.cartService.totalQuantity.subscribe(\r\n      data => this.totalQuantity = data\r\n    );\r\n\r\n    // compute cart total price and quantity\r\n    this.cartService.computeCartTotals();\r\n\r\n  }\r\n\r\n  incrementQuantity(theCartItem: CartItem) {\r\n\r\n    this.cartService.addToCart(theCartItem);\r\n  }\r\n\r\n  decrementQuantity(theCartItem: CartItem) {\r\n\r\n    this.cartService.decrementQuantity(theCartItem);\r\n  }\r\n\r\n  remove(theCartItem: CartItem) {\r\n\r\n    this.cartService.remove(theCartItem);\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"section-content section-content-30\">\r\n        <div class=\"container-fluid\">\r\n\r\n            <!-- display message if cart empty -->\r\n            <div *ngIf=\"cartItems.length == 0\" class=\"alert alert-warning col-md-12\" role=\"alert\">\r\n                No items in cart!\r\n            </div>\r\n\r\n            <div *ngIf=\"cartItems.length > 0\">\r\n                <table class=\"table table-bordered\">\r\n                    <tr>\r\n                        <th width=\"25%\">Product</th>\r\n                        <th width=\"50%\">Details</th>\r\n                        <th width=\"25%\">Totals</th>\r\n                    </tr>\r\n\r\n                    <tr *ngFor=\"let tempCartItem of cartItems\">\r\n                        <td>\r\n                            <img src=\"{{ tempCartItem.imageUrl }}\" class=\"img-responsive\" />\r\n                        </td>\r\n                        <td>\r\n                            <p style=\"padding-left: 5%\">{{ tempCartItem.name }}</p>\r\n                            <p style=\"padding-left: 5%\">{{ tempCartItem.unitPrice | currency: 'USD' }}</p>\r\n                        </td>\r\n                        <td>\r\n                            <div class=\"items\">\r\n\r\n\r\n\r\n                                <div class=\"row no-gutters\" style=\"padding-left: 10%\">\r\n                                    <label>Quantity: </label>\r\n                                    <!-- spacer -->\r\n                                    <div class=\"col-1\"></div>\r\n                                    <!-- quantity increment -->\r\n                                    <div class=\"col\">\r\n\r\n                                        <button (click)=\"incrementQuantity(tempCartItem)\"\r\n                                            class=\"btn btn-primary btn-sm\">\r\n                                            <i class=\"fas fa-plus\"></i>\r\n                                        </button>\r\n\r\n                                        {{ tempCartItem.quantity }}\r\n\r\n                                        <button (click)=\"decrementQuantity(tempCartItem)\"\r\n                                            class=\"btn btn-primary btn-sm\">\r\n                                            <i class=\"fas fa-minus\"></i>\r\n                                        </button>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                            <p class=\"mt-2\" style=\"padding-left: 10%\">Subtotal:\r\n                                {{ tempCartItem.quantity * tempCartItem.unitPrice | currency: 'USD' }}\r\n                                <br>\r\n                                <br>\r\n                                <!-- remove button  -->\r\n                                <button (click)=\"remove(tempCartItem)\" class=\"btn btn-primary btn-sm mt-2\"\r\n                                    style=\"font-size: .65rem\">remove</button>\r\n                            </p>\r\n\r\n\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <!-- Total Quantity and Total Price -->\r\n\r\n                    <tr *ngIf=\"totalQuantity != 0\">\r\n                        <td colspan=\"2\"></td>\r\n                        <td style=\"font-weight: bold; padding-left: 2%;\">\r\n\r\n                            <p>Total Quantity: {{ totalQuantity }}</p>\r\n                            <p>Shipping: FREE</p>\r\n                            <p>Total Price: {{ totalPrice | currency: 'USD' }}</p>\r\n                            <a routerLink=\"/checkout\" class=\"btn btn-primary\" style=\"font-size: .65rem\">Checkout</a>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { CartService } from 'src/app/services/cart.service';\r\n\r\n@Component({\r\n  selector: 'app-cart-status',\r\n  templateUrl: './cart-status.component.html',\r\n  styleUrls: ['./cart-status.component.css']\r\n})\r\nexport class CartStatusComponent implements OnInit {\r\n\r\n  totalPrice: number = 0.00;\r\n  totalQuantity: number = 0;\r\n\r\n  constructor(private cartService: CartService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.updateCartStatus();\r\n\r\n  }\r\n\r\n  updateCartStatus() {\r\n\r\n    // subscribe to the cart totalPrice\r\n    this.cartService.totalPrice.subscribe(\r\n\r\n      data => this.totalPrice = data\r\n    );\r\n\r\n    // subscribe to the cart totalQuantity\r\n    this.cartService.totalQuantity.subscribe(\r\n\r\n      data => this.totalQuantity = data\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"cart-area d-n\">\r\n    <!-- <a href=\"shopping-detail.html\"> -->\r\n    <a routerLink=\"/cart-details\">\r\n        <!-- was hardcoded -->\r\n        <!-- <div class=\"total\">$36.98\r\n            <span> 2</span>\r\n        </div> -->\r\n\r\n        <!-- now these update every time the cart-status component updates \r\n                when user adds/removes item to cart  -->\r\n        <div class=\"total\">{{ totalPrice | currency: 'USD' }}\r\n            <span> {{ totalQuantity }}</span>\r\n        </div>\r\n\r\n        <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\r\n    </a>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ShopFormService } from 'src/app/services/shop-form.service';\r\nimport { Country } from 'src/app/common/country';\r\nimport { State } from 'src/app/common/state';\r\nimport { CartService } from 'src/app/services/cart.service';\r\n\r\n@Component({\r\n  selector: 'app-checkout',\r\n  templateUrl: './checkout.component.html',\r\n  styleUrls: ['./checkout.component.css']\r\n})\r\nexport class CheckoutComponent implements OnInit {\r\n\r\n  checkoutFormGroup: FormGroup;\r\n\r\n  totalPrice: number = 0;\r\n  totalQuantity: number = 0;\r\n\r\n  creditCardYears: number[] = [];\r\n  creditCardMonths: number[] = [];\r\n\r\n  //countries\r\n  countries: Country[] = [];\r\n\r\n\r\n  // need 2 separate states array for shipping and billing\r\n  shippingAddressStates: State[] = [];\r\n  billingAddressStates: State[] = [];\r\n\r\n\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private shopFormService: ShopFormService,\r\n    private cartService: CartService) { }\r\n\r\n\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.checkoutFormGroup = this.formBuilder.group({\r\n\r\n      customer: this.formBuilder.group({\r\n\r\n        // firstName: [''],\r\n        firstName: new FormControl('', [Validators.required, Validators.minLength(2)]),\r\n        // lastName: [''],\r\n        lastName: new FormControl('', [Validators.required, Validators.minLength(2)]),\r\n        // email: ['']\r\n        email: new FormControl('', [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')])\r\n      }),\r\n\r\n      shippingAddress: this.formBuilder.group({\r\n\r\n        street: [''],\r\n        city: [''],\r\n        state: [''],\r\n        zipCode: [''],\r\n        country: ['']\r\n      }),\r\n\r\n      billingAddress: this.formBuilder.group({\r\n\r\n        street: [''],\r\n        city: [''],\r\n        state: [''],\r\n        zipCode: [''],\r\n        country: ['']\r\n      }),\r\n\r\n      creditCard: this.formBuilder.group({\r\n\r\n        cardType: [''],\r\n        nameOnCard: [''],\r\n        cardNumber: [''],\r\n        securityCode: [''],\r\n        expirationMonth: [''],\r\n        expirationYear: ['']\r\n      })\r\n    });\r\n\r\n\r\n\r\n\r\n    // populate credit card months\r\n    const startMonth: number = new Date().getMonth() + 1;\r\n    console.log(\"startMonth: \" + startMonth);\r\n\r\n    this.shopFormService.getCreditCardMonths(startMonth).subscribe(\r\n\r\n      data => {\r\n\r\n        console.log(\"Retrieved credit card months: \" + JSON.stringify(data));\r\n        this.creditCardMonths = data;\r\n      }\r\n    );\r\n\r\n\r\n\r\n    // populate credit card years\r\n    this.shopFormService.getCreditCardYears().subscribe(\r\n\r\n      data => {\r\n\r\n        console.log(\"Retrieved credit card years: \" + JSON.stringify(data));\r\n        this.creditCardYears = data;\r\n      }\r\n    );\r\n\r\n\r\n\r\n    // populate countries from JPA when form is initially displayed\r\n    this.shopFormService.getCountries().subscribe(\r\n\r\n      // data rec'd back from API\r\n      data => {\r\n        console.log(\"Retrieved countries: \" + JSON.stringify(data));\r\n\r\n        // set checkout component property 'countries' to = the returned countries API data\r\n        this.countries = data;\r\n      }\r\n    );\r\n\r\n    // populate totalPrice and totalQuantity\r\n    this.reviewCartDetails();\r\n  }\r\n\r\n  // validation methods used in checkout.component.html\r\n  get firstName() { return this.checkoutFormGroup.get('customer.firstName'); }\r\n  get lastName() { return this.checkoutFormGroup.get('customer.lastName'); }\r\n  get email() { return this.checkoutFormGroup.get('customer.email'); }\r\n\r\n  reviewCartDetails() {\r\n\r\n    this.cartService.totalQuantity.subscribe(\r\n\r\n      totalQuantity => this.totalQuantity = totalQuantity\r\n\r\n    );\r\n\r\n    this.cartService.totalPrice.subscribe(\r\n\r\n      totalPrice => this.totalPrice = totalPrice\r\n\r\n    );\r\n\r\n  }\r\n\r\n\r\n\r\n  onSubmit() {\r\n\r\n    // logging\r\n\r\n    console.log(\"handling the submit button\");\r\n    console.log(this.checkoutFormGroup.get('customer').value);\r\n\r\n    console.log(\"The customer email address is \" + this.checkoutFormGroup.get('customer').value.email);\r\n\r\n    console.log(\"The customer shipping state is \" + this.checkoutFormGroup.get('shippingAddress').value.state);\r\n    console.log(\"The customer shipping country is \" + this.checkoutFormGroup.get('shippingAddress').value.country);\r\n  }\r\n\r\n\r\n\r\n\r\n  copyShippingAddressToBillingAddress(event) {\r\n\r\n    if (event.target.checked) {\r\n\r\n      this.checkoutFormGroup.controls.billingAddress\r\n        .setValue(this.checkoutFormGroup.controls.shippingAddress.value);\r\n\r\n      // bug fix code for billing state not updating when 'same as shipping address' selected\r\n      this.billingAddressStates = this.shippingAddressStates;\r\n\r\n    }\r\n    else {\r\n\r\n      this.checkoutFormGroup.controls.billingAddress.reset();\r\n\r\n      // bug fix code for billing states\r\n      this.billingAddressStates = [];\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  handleMonthsAndYears() {\r\n\r\n    const creditCardFormGroup = this.checkoutFormGroup.get('creditCard');\r\n\r\n    const currentYear: number = new Date().getFullYear();\r\n    const selectedYear: number = Number(creditCardFormGroup.value.expirationYear);\r\n\r\n    // if current year equals selected year, then start with the current month\r\n\r\n    let startMonth: number;\r\n\r\n    if (currentYear === selectedYear) {\r\n\r\n      startMonth = new Date().getMonth() + 1;\r\n    }\r\n    else {\r\n\r\n      startMonth = 1; // January for any other year than current year\r\n    }\r\n\r\n    // get the data from shopFormService\r\n    this.shopFormService.getCreditCardMonths(startMonth).subscribe(\r\n\r\n      data => {\r\n\r\n        console.log(\"Retrieved credit card months: \" + JSON.stringify(data));\r\n        this.creditCardMonths = data;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n  getStates(formGroupName: string) {\r\n\r\n    const formGroup = this.checkoutFormGroup.get(formGroupName);\r\n\r\n    // the API only requires the country code \"IN\", \"CA\" to return states\r\n    // http://localhost:8080/api/states/search/findByCountryCode?code=DE\r\n\r\n    // returning the name here for future debugging purposes\r\n\r\n    const countryCode = formGroup.value.country.code;\r\n    const countryName = formGroup.value.country.name;\r\n\r\n    console.log(`${formGroupName} country code: ${countryCode}`);\r\n    console.log(`${formGroupName} country name: ${countryName}`);\r\n\r\n\r\n    this.shopFormService.getStates(countryCode).subscribe(\r\n\r\n      data => {\r\n\r\n        if (formGroupName === 'shippingAddress') {\r\n\r\n          this.shippingAddressStates = data;\r\n\r\n        }\r\n        else {\r\n\r\n          this.billingAddressStates = data;\r\n        }\r\n\r\n        // select first item by default\r\n        formGroup.get('state').setValue(data[0]);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n","<div class=\"main-content page-m\">\r\n    <div class=\"section-content section-content-30\">\r\n\r\n        <div class=\"container-fluid\">\r\n\r\n            <!-- call onSubmit() method on submit -->\r\n            <form [formGroup]=\"checkoutFormGroup\" (ngSubmit)=\"onSubmit()\">\r\n\r\n                <!-- customer form group -->\r\n                <div formGroupName=\"customer\" class=\"form-area\">\r\n                    <h3>Customer</h3>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>First Name</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <input formControlName=\"firstName\" type=\"text\">\r\n                                <!-- validator method dirty=did user change field value, touched=did user change fields -->\r\n                                <div *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched)\"\r\n                                    class=\"alert alert-danger mt-1\">\r\n\r\n                                    <div *ngIf=\"firstName.errors.required\">\r\n                                        First Name is required\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"firstName.errors.minlength\">\r\n                                        First Name must be at least 2 characters\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>Last Name</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <input formControlName=\"lastName\" type=\"text\">\r\n\r\n                                <!-- validator method dirty=did user change field value, touched=did user change fields -->\r\n                                <div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\"\r\n                                    class=\"alert alert-danger mt-1\">\r\n\r\n                                    <div *ngIf=\"lastName.errors.required\">\r\n                                        Last Name is required\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"lastName.errors.minlength\">\r\n                                        Last Name must be at least 2 characters\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>Email</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <input formControlName=\"email\" type=\"text\">\r\n\r\n                                <!-- validator method dirty=did user change field value, touched=did user change fields -->\r\n                                <div *ngIf=\"email.invalid && (email.dirty || email.touched)\"\r\n                                    class=\"alert alert-danger mt-1\">\r\n\r\n                                    <div *ngIf=\"email.errors.required\">\r\n                                        Email is required\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"email.errors.pattern\">\r\n                                        Email must be valid format\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <!-- shipping address form group -->\r\n                <div formGroupName=\"shippingAddress\" class=\"form-area\">\r\n                    <h3>Shipping Address</h3>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>Country</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <select formControlName=\"country\" (change)=\"getStates('shippingAddress')\">\r\n                                    <!-- ngValue is the country code used by the States dropdown method -->\r\n                                    <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\r\n\r\n                                        {{ country.name }}\r\n\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>Street</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <input formControlName=\"street\" type=\"text\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>City</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <input formControlName=\"city\" type=\"text\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>State</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <select formControlName=\"state\">\r\n                                    <option *ngFor=\"let state of shippingAddressStates\" [ngValue]=\"state\">\r\n\r\n                                        {{ state.name }}\r\n\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>Zip Code</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <input formControlName=\"zipCode\" type=\"text\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <!-- check box to copy shipping to billing address -->\r\n                <div class=\"input-space\">\r\n                    <label class=\"au-checkbox\">\r\n                        <input type=\"checkbox\" (change)=\"copyShippingAddressToBillingAddress($event)\">\r\n                        <span class=\"au-checkmark\"></span>Billing Address same as Shipping Address\r\n                    </label>\r\n                </div>\r\n\r\n                <!-- billing address form group -->\r\n                <div formGroupName=\"billingAddress\" class=\"form-area\">\r\n                    <h3>Billing Address</h3>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>Country</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <select formControlName=\"country\" (change)=\"getStates('billingAddress')\">\r\n                                    <!-- ngValue is the country code used by the States dropdown method -->\r\n                                    <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\r\n\r\n                                        {{ country.name }}\r\n\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>Street</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <input formControlName=\"street\" type=\"text\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>City</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <input formControlName=\"city\" type=\"text\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>State</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <select formControlName=\"state\">\r\n                                    <option *ngFor=\"let state of billingAddressStates\" [ngValue]=\"state\">\r\n\r\n                                        {{ state.name }}\r\n\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>Zip Code</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <input formControlName=\"zipCode\" type=\"text\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <!-- credit card info -->\r\n                <div formGroupName=\"creditCard\" class=\"form-area\">\r\n                    <h3>Credit Card</h3>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>Card Type</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <select formControlName=\"cardType\">\r\n                                    <option>Visa</option>\r\n                                    <option>Mastercard</option>\r\n                                    <option>American Express</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>Name on Card</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <input formControlName=\"nameOnCard\" type=\"text\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>Card Number</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <input formControlName=\"cardNumber\" type=\"text\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>Security Code</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <input formControlName=\"securityCode\" type=\"text\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>Expiration Month</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <select formControlName=\"expirationMonth\">\r\n                                    <option *ngFor=\"let month of creditCardMonths\">\r\n                                        {{ month }}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2\"><label>Expiration Year</label></div>\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"input-space\">\r\n                                <!--  event binding -->\r\n                                <select formControlName=\"expirationYear\" (change)=\"handleMonthsAndYears()\">\r\n                                    <option *ngFor=\"let year of creditCardYears\">\r\n                                        {{ year }}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- end forms -->\r\n                </div>\r\n\r\n                <!-- order details -->\r\n                <div class=\"form-area\">\r\n                    <h3>Review Order</h3>\r\n\r\n                    <p>Total Quantity: {{ totalQuantity }}</p>\r\n                    <p>Shipping: FREE</p>\r\n                    <p>Total Price: {{ totalPrice | currency: 'USD' }}</p>\r\n                </div>\r\n\r\n\r\n                <!-- submit button -->\r\n\r\n                <div class=\"text-center\">\r\n                    <button type=\"submit\" class=\"btn btn-info\">Purchase</button>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ProductCategory } from 'src/app/common/product-category';\r\nimport { ProductService } from 'src/app/services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-product-category-menu',\r\n  templateUrl: './product-category-menu.component.html',\r\n  styleUrls: ['./product-category-menu.component.css']\r\n})\r\nexport class ProductCategoryMenuComponent implements OnInit {\r\n\r\n  productCategories: ProductCategory[];\r\n\r\n  // inject product service\r\n  constructor(private productService: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.listProductCategories();\r\n  }\r\n\r\n  listProductCategories() {\r\n\r\n    this.productService.getProductCategories().subscribe(\r\n\r\n      data => {\r\n\r\n        console.log('Product Categories=' + JSON.stringify(data));\r\n\r\n        this.productCategories = data;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"menu-sidebar-content js-scrollbar1\">\r\n    <nav class=\"navbar-sidebar\">\r\n        <ul class=\"list-unstyled navbar-list\">\r\n\r\n\r\n\r\n            <li *ngFor=\"let tempProductCategory of productCategories\">\r\n                <!-- replace href with router link -->\r\n                <!--  <a href=\"#\">Books</a>  -->\r\n                <a routerLink=\"/category/{{ tempProductCategory.id }}/{{ tempProductCategory.categoryName }}\"\r\n                    routerLinkActive=\"active-link\">\r\n\r\n                    {{ tempProductCategory.categoryName }}\r\n\r\n                </a>\r\n\r\n            </li>\r\n\r\n            <!-- <li>\r\n                <!-- replace href with router link \r\n                <!--  <a href=\" #\">Coffee Mugs</a>\r\n                <a routerLink=\"/category/1\" routerLinkActive=\"active-link\">Books</a>\r\n            </li>\r\n            <li>\r\n                <!-- replace href with router link \r\n                <!--  <a href=\"#\">Coffee Mugs</a>  \r\n                <a routerLink=\"/category/2\" routerLinkActive=\"active-link\">Mugs</a>\r\n            </li>\r\n            <li>\r\n          <a href=\"#\">Mouse Pads</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">Luggage Tags</a>\r\n        </li> -->\r\n        </ul>\r\n    </nav>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Product } from 'src/app/common/product';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { CartItem } from 'src/app/common/cart-item';\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.css']\r\n})\r\nexport class ProductDetailsComponent implements OnInit {\r\n\r\n  // here we generate a new product object each time a user selects a product\r\n  // this allows method calls on that specific product instead of the same object which creates errors\r\n\r\n  // Specifically, product properties are not assigned a value until the data arrives back\r\n  // from the ProductService method call to REST API\r\n  // and since it's an asynchronous call, if no product is selected, the async call is attempting\r\n  // to assign properties to an undefined product object that hasn't been instantiated yet\r\n  // thus, instead of product: Product; we do product: Product = new Product();\r\n  // so async call always has a product object to assign properties\r\n  product: Product = new Product();\r\n\r\n\r\n  // inject dependencies\r\n  constructor(private productService: ProductService,\r\n    private cartService: CartService,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.route.paramMap.subscribe(() => {\r\n\r\n      this.handleProductsDetails();\r\n    })\r\n  }\r\n\r\n\r\n  handleProductsDetails() {\r\n\r\n    // get the \"id\" param string and convert string to a number using the \"+\" symbol\r\n    const theProductId: number = +this.route.snapshot.paramMap.get('id');\r\n\r\n    this.productService.getProduct(theProductId).subscribe(\r\n\r\n      data => {\r\n\r\n        this.product = data;\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  addToCart() {\r\n\r\n    console.log(`Adding to cart:  ${this.product.name}, ${this.product.unitPrice}`);\r\n\r\n    const theCartItem = new CartItem(this.product);\r\n\r\n    this.cartService.addToCart(theCartItem);\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"detail-section\">\r\n    <div class=\"container-fluid\">\r\n\r\n        <!-- <p style=\"margin-top: 100px\">{{ product.name }}</p>> -->\r\n\r\n        <img src=\"{{ product.imageUrl }}\" class=\"detail-img\">\r\n\r\n        <h3>{{ product.name }}</h3>\r\n\r\n        <div class=\"price\">{{ product.unitPrice | currency: 'USD' }}</div>\r\n\r\n        <button (click)=\"addToCart()\" class=\"btn btn-primary btn-sm\">Add to cart</button>\r\n\r\n        <hr>\r\n        <h4>Description</h4>\r\n        <p>{{ product.description }}</p>\r\n\r\n\r\n        <!-- link back to main products page  -->\r\n        <a routerLink=\"/products\" class=\"mt-5\">Back to Products</a>\r\n\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { CartService } from 'src/app/services/cart.service';\r\nimport { Product } from '../../common/product';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CartItem } from 'src/app/common/cart-item';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  // templateUrl: './product-list.component.html',\r\n  // templateUrl: './product-list-table.component.html',\r\n  templateUrl: './product-list-grid.component.html',\r\n  styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n\r\n  products: Product[] = [];\r\n  currentCategoryId: number = 1;\r\n  previousCategoryId: number = 1;\r\n  currentCategoryName: string;\r\n  searchMode: boolean = false;\r\n\r\n  // new properties for pagination\r\n  thePageNumber: number = 1;\r\n  thePageSize: number = 5;\r\n  theTotalElements: number = 0;\r\n\r\n  previousKeyword: string = null;\r\n\r\n  constructor(private productService: ProductService,\r\n    private cartService: CartService,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void { // similar to @PostConstruct where we will actually call our List Products method\r\n\r\n    this.route.paramMap.subscribe(() => {\r\n      this.listProducts();\r\n    });\r\n\r\n\r\n  }\r\n\r\n  // the method is  invoked once you \"subscribe\"\r\n  // this method will run in an asynchronous fashion\r\n  // and once it has returned, we can assign it to our own property to display\r\n\r\n  listProducts() {\r\n\r\n    // // check if \"id\" paramter is available first\r\n    // const hasCategoryId: boolean = this.route.snapshot.paramMap.has('id');\r\n\r\n    // if (hasCategoryId) {\r\n    //   // get the \"id\" param string. convert string to a number using the \"+\" symbol\r\n    //   this.currentCategoryId = +this.route.snapshot.paramMap.get('id');\r\n\r\n    //   // get the \"name\" param string\r\n    //   this.currentCategoryName = this.route.snapshot.paramMap.get('name');\r\n    // }\r\n    // else {\r\n    //   // not category id available ... default to category id 1\r\n    //   this.currentCategoryId = 1;\r\n    //   this.currentCategoryName = 'Books';\r\n    // }\r\n\r\n    // // now get the products for the given category id\r\n    // this.productService.getProductList(this.currentCategoryId).subscribe(\r\n\r\n    //   data => {\r\n    //     this.products = data;\r\n    //   }\r\n    // );\r\n\r\n    // basically checking, did user type something into search bar?\r\n    this.searchMode = this.route.snapshot.paramMap.has('keyword');\r\n\r\n    // if yes, then call the search method\r\n    if (this.searchMode) {\r\n\r\n      this.handleSearchProducts();\r\n\r\n      // otherwise, just list the products\r\n    } else {\r\n\r\n      this.handleListProducts();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  handleSearchProducts() {\r\n\r\n    const theKeyword: string = this.route.snapshot.paramMap.get('keyword');\r\n\r\n    // if we have a different keyword than previous then set thePageNumber to 1\r\n\r\n    if (this.previousKeyword != theKeyword) {\r\n      this.thePageNumber = 1;\r\n    }\r\n\r\n    this.previousKeyword = theKeyword;\r\n\r\n    console.log(`keyword=${theKeyword}, thePageNumber=${this.thePageNumber}`);\r\n\r\n    // now search for products using the given keyword\r\n    // this.productService.searchProducts(theKeyword).subscribe(\r\n\r\n    //   data => {\r\n\r\n    //     this.products = data;\r\n\r\n    //   }\r\n    // );\r\n\r\n    this.productService.searchProductsPaginate(this.thePageNumber - 1,\r\n      this.thePageSize,\r\n      theKeyword).subscribe(this.processResult());\r\n\r\n  }\r\n\r\n\r\n  handleListProducts() {\r\n\r\n    // check if \"id\" paramter is available first\r\n    const hasCategoryId: boolean = this.route.snapshot.paramMap.has('id');\r\n\r\n    if (hasCategoryId) {\r\n      // get the \"id\" param string. convert string to a number using the \"+\" symbol\r\n      this.currentCategoryId = +this.route.snapshot.paramMap.get('id');\r\n\r\n      // get the \"name\" param string\r\n      this.currentCategoryName = this.route.snapshot.paramMap.get('name');\r\n    }\r\n    else {\r\n      // not category id available ... default to category id 1\r\n      this.currentCategoryId = 1;\r\n      this.currentCategoryName = 'Books';\r\n    }\r\n\r\n    // pagination workflow\r\n    //\r\n    // Check if we hae a different category than previous (state)\r\n    // Note: Angular will reuse a component if it is currently being viewed\r\n    //\r\n\r\n    // if we have a different category id than previous,\r\n    // then reset thePageNumber back to 1\r\n    if (this.previousCategoryId != this.currentCategoryId) {\r\n      this.thePageNumber = 1;\r\n    }\r\n\r\n    this.previousCategoryId = this.currentCategoryId;\r\n\r\n    console.log(`currentCategoryId=${this.currentCategoryId}, thePageNumber=${this.thePageNumber}`);\r\n\r\n\r\n\r\n\r\n    // now get the products for the given category id\r\n    // this.productService.getProductList(this.currentCategoryId).subscribe(\r\n\r\n    //   data => {\r\n    //     this.products = data;\r\n    //   }\r\n    // );\r\n\r\n    // Angular Pagination component: pages are 1 Based \r\n    // Spring Data REST: pages are 0 Based, thus pageNumber - 1\r\n    this.productService.getProductListPaginate(this.thePageNumber - 1,\r\n      this.thePageSize,\r\n      this.currentCategoryId)\r\n      .subscribe(this.processResult());\r\n\r\n  }\r\n\r\n  // On the left are properties defined in this class\r\n  // on the right is the data rec'd back from Spring Data REST JSON database\r\n  // so we're assigning the returned JSON data as the properties for pagination display\r\n  processResult() {\r\n\r\n    return data => {\r\n\r\n      this.products = data._embedded.products;\r\n      this.thePageNumber = data.page.number + 1; // + 1 because Spring Data REST is 0 based\r\n      this.thePageSize = data.page.size;\r\n      this.theTotalElements = data.page.totalElements; // defined as totalElements in product.service.ts\r\n\r\n    };\r\n  }\r\n\r\n  updatePageSize(pageSize: number) {\r\n    this.thePageSize = pageSize;\r\n    this.thePageNumber = 1;\r\n    this.listProducts();\r\n  }\r\n\r\n\r\n\r\n  // ADD TO CART METHODS\r\n  addToCart(theProduct: Product) {\r\n\r\n    console.log(`Adding to cart: ${theProduct.name}, ${theProduct.unitPrice}`);\r\n\r\n    // TODO ... do the real work\r\n    const theCartItem = new CartItem(theProduct);\r\n\r\n    this.cartService.addToCart(theCartItem);\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"section-content section-content-p30\">\r\n\r\n        <h4>{{ currentCategoryName }}</h4>\r\n        <hr>\r\n\r\n        <!-- grid styles in styles.css product container-->\r\n        <div class=\"container-fluid \">\r\n            <div class=\"product-container \">\r\n\r\n                <!-- loop over the collection of products -->\r\n                <div *ngFor=\"let tempProduct of products\" class=\"col-md-3\">\r\n\r\n                    <div class=\"product-box \">\r\n\r\n                        <!-- link to product details on image -->\r\n                        <a routerLink=\"/products/{{ tempProduct.id }}\">\r\n                            <img src=\"{{ tempProduct.imageUrl }}\" class=\"img-responsive\">\r\n                        </a>\r\n\r\n                        <!-- link to product details on name -->\r\n                        <a routerLink=\"/products/{{ tempProduct.id }}\">\r\n                            <h1>{{ tempProduct.name }}</h1>\r\n                        </a>\r\n\r\n                        <div class=\"price\">{{ tempProduct.unitPrice | currency:'USD' }}</div>\r\n                        <button (click)=\"addToCart(tempProduct)\" class=\"btn btn-primary btn-sm\">Add to cart</button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <!-- if products empty then display a message-->\r\n                <div *ngIf=\"products?.length == 0\" class=\"alert alert-warning col-md-12\" role=\"alert\">\r\n                    Sorry! No products found.\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <!-- begin footer -->\r\n            <div class=\"footer-pagination \">\r\n                <!--  if products empty / not found, then don't display pagination -->\r\n                <div *ngIf=\"theTotalElements != 0\" class=\"row\">\r\n                    <div class=\"col-md-6\"></div>\r\n\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"col-md-3\">\r\n\r\n                            <ngb-pagination [(page)]=\"thePageNumber\" [pageSize]=\"thePageSize\"\r\n                                [collectionSize]=\"theTotalElements\" [maxSize]=\"5\" [boundaryLinks]=\"true\"\r\n                                (pageChange)=\"listProducts()\">\r\n\r\n                            </ngb-pagination>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-md-3 mt-2\" style=\"margin-left:25%;\">\r\n                            <span class=\"mr-2\">Page Size</span>\r\n\r\n                            <select (change)=\"updatePageSize($event.target.value)\">\r\n                                <option>2</option>\r\n                                <option selected=\"true\">5</option>\r\n                                <option>10</option>\r\n                                <option>20</option>\r\n                                <option>50</option>\r\n                            </select>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <!-- end footer -->\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- First draft - basic table view\r\n    \r\n    <table class=\"table\">\r\n\r\n    <thead class=\"thead-dark\">\r\n        <tr>\r\n            <th></th>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Units in Stock</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n\r\n        <tr *ngFor=\"let tempProduct of products\">\r\n            <td class=\"align-middle\">\r\n                <img src=\"{{ tempProduct.imageUrl }}\" height=\"50\" />\r\n            </td>\r\n            <td class=\"align-middle\">{{ tempProduct.name }}</td>\r\n            <td class=\"align-middle\">{{ tempProduct.unitPrice | currency: 'USD' }}</td>\r\n            <td class=\"align-middle\">{{ tempProduct.unitsInStock }}</td>\r\n\r\n\r\n        </tr>\r\n    </tbody>\r\n</table> -->\r\n\r\n\r\n\r\n\r\n<!-- here we are accessing the products from the product-list.component.ts -->\r\n<!-- <p *ngFor=\"let tempProduct of products\">\r\n\r\n    {{ tempProduct.name }}: {{ tempProduct.unitPrice | currency: 'USD' }}\r\n</p> -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  // first inject the router into the component\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // add the search method called from search.component.html\r\n  // value = the keyword the user entered to search\r\n  doSearch(value: string) {\r\n    console.log(`value=${value}`);\r\n\r\n    this.router.navigateByUrl(`/search/${value}`);\r\n  }\r\n\r\n}\r\n","<div class=\"form-header\">\r\n\r\n    <input #myInput type=\"text\" placeholder=\"Search for products...\" class=\"au-input au-input-xl\"\r\n        (keyup.enter)=\"doSearch(myInput.value)\" />\r\n\r\n    <button (click)=\"doSearch(myInput.value)\" class=\"au-btn-submit\">\r\n        Search\r\n    </button>\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { CartItem } from '../common/cart-item';\r\nimport { Subject, ReplaySubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n\r\n  cartItems: CartItem[];\r\n\r\n  totalPrice: ReplaySubject<number> = new ReplaySubject<number>();\r\n  totalQuantity: ReplaySubject<number> = new ReplaySubject<number>();\r\n\r\n  constructor() {\r\n\r\n    // This now uses the constructor to initialises the cartItems variable.\r\n    // If there is a value in the sessionStorage cartItems value we initialise with that value, \r\n    // otherwise we initialise to an empty array.\r\n    // The reason for JSON.parse is sessionStorage and localStorage store strings. \r\n    // So we need to convert the string back into a javascript object equivalent (json).\r\n    this.cartItems = JSON.parse(sessionStorage.getItem('cartItems'))! + null ?\r\n      JSON.parse(sessionStorage.getItem('cartItems')) : [];\r\n  }\r\n\r\n  // This creates a function which sets the sessionStorage cartItems value with the currentItems variable value.\r\n  // The reason for JSON.stringify is sessionStorage and localStorage store strings. \r\n  // So this allows us to convert our array into a string equivalent.\r\n  persistCartItems() {\r\n    sessionStorage.setItem('cartItems', JSON.stringify(this.cartItems));\r\n  }\r\n\r\n\r\n  addToCart(theCartItem: CartItem) {\r\n\r\n    // check if we already have the item in our cart\r\n    let alreadyExistsInCart: boolean = false;\r\n    let existingCartItem: CartItem = undefined;\r\n\r\n\r\n    if (this.cartItems.length > 0) {\r\n\r\n      // find the item in the cart based on item id\r\n      // for (let tempCartItem of this.cartItems) {\r\n\r\n      //   if (tempCartItem.id === theCartItem.id) {\r\n      //     existingCartItem = tempCartItem;\r\n      //     break;\r\n      //   }\r\n      // }\r\n\r\n      // same code as above, \r\n      // loops through cartItems and returns first element that passes else returns 'undefined'\r\n      existingCartItem = this.cartItems.find(tempCartItem => tempCartItem.id === theCartItem.id);\r\n\r\n\r\n      // check if we found it\r\n      alreadyExistsInCart = (existingCartItem != undefined);\r\n\r\n    }\r\n\r\n    if (alreadyExistsInCart) {\r\n      // increment the quantity\r\n      existingCartItem.quantity++;\r\n    } else {\r\n      // just add the item to the array\r\n      this.cartItems.push(theCartItem);\r\n    }\r\n\r\n    // compute cart total price and total quantity\r\n    this.computeCartTotals();\r\n\r\n  }\r\n\r\n  computeCartTotals() {\r\n\r\n    let totalPriceValue: number = 0;\r\n    let totalQuantityValue: number = 0;\r\n\r\n    for (let currentCartItem of this.cartItems) {\r\n      totalPriceValue += (currentCartItem.quantity * currentCartItem.unitPrice);\r\n      totalQuantityValue += (currentCartItem.quantity);\r\n    }\r\n\r\n    // publish the new values ... all subscribers will receive the new data\r\n    this.totalPrice.next(totalPriceValue);\r\n    this.totalQuantity.next(totalQuantityValue);\r\n\r\n    // the .publish() actually sends the event to subscribers\r\n\r\n    // log cart data just for debugging purposes\r\n    this.logCartData(totalPriceValue, totalQuantityValue);\r\n\r\n    // Every time we manipulate this.cartItems variable \r\n    // we should update the sessionStorage variable value to reflect this.\r\n    this.persistCartItems();\r\n  }\r\n\r\n  logCartData(totalPriceValue: number, totalQuantityValue: number) {\r\n\r\n    console.log('Cart Contents: ');\r\n\r\n    for (let tempCartItem of this.cartItems) {\r\n\r\n      const subTotalPrice = tempCartItem.quantity * tempCartItem.unitPrice;\r\n\r\n      console.log(`name: ${tempCartItem.name}, quantity=${tempCartItem.quantity}, \r\n                    unitPrice=${tempCartItem.unitPrice}, subTotalPrice=${subTotalPrice}`);\r\n    }\r\n\r\n\r\n    console.log(`totalPrice: ${totalPriceValue.toFixed(2)}, totalQuantity: ${totalQuantityValue}`);\r\n    console.log('------');\r\n  }\r\n\r\n\r\n  decrementQuantity(theCartItem: CartItem) {\r\n\r\n    theCartItem.quantity--;\r\n\r\n    if (theCartItem.quantity === 0) {\r\n      this.remove(theCartItem);\r\n    }\r\n    else {\r\n      this.computeCartTotals();\r\n\r\n    }\r\n  }\r\n  remove(theCartItem: CartItem) {\r\n\r\n    // get index of CartItem in the array, if not found itemIndex will return -1\r\n    const itemIndex = this.cartItems.findIndex(tempCartItem => tempCartItem.id === theCartItem.id);\r\n\r\n    // if found, remove the item from the array at the given index\r\n    if (itemIndex > -1) {\r\n      this.cartItems.splice(itemIndex, 1);\r\n\r\n      this.computeCartTotals();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Product } from '../common/product';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ProductCategory } from '../common/product-category';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n\r\n\r\n\r\n  // private baseUrl = \"http://localhost:8080/api/products\"; // hardcoded\r\n\r\n  private baseUrl = \"https://springboot-angular-ecommerce.herokuapp.com/api/products\"; // hardcoded\r\n\r\n  // private categoryUrl = \"http://localhost:8080/api/product-category\";\r\n\r\n  private categoryUrl = \"https://springboot-angular-ecommerce.herokuapp.com/api/product-category\";\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n\r\n\r\n  // this method is called when a user clicks a product image or name\r\n  // used to show Product Details page by called REST API on product id\r\n  getProduct(theProductId: number): Observable<Product> {\r\n\r\n    // need to build URL based on product id\r\n    const productUrl = `${this.baseUrl}/${theProductId}`;\r\n\r\n    return this.httpClient.get<Product>(productUrl);\r\n\r\n  }\r\n\r\n  // returns an Observable, maps the JSON data from Spring Data REST into a Product array\r\n  getProductList(theCategoryId: number): Observable<Product[]> {\r\n\r\n    // need to build URL based on category id\r\n\r\n    // Since Spring Data REST in the Product Repository class automatically exposes \r\n    // this endpoint -> \"http://localhost:8080/api/products/search/findByCategoryId\"\r\n\r\n    // so we build a dynamic search Url that takes in the user's click/input (as category id)\r\n\r\n    const searchUrl = `${this.baseUrl}/search/findByCategoryId?id=${theCategoryId}`;\r\n\r\n    // return this.httpClient.get<GetResponse>(this.baseUrl).pipe(\r\n    return this.getProducts(searchUrl);\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  // helper method\r\n  private getProducts(searchUrl: string): Observable<Product[]> {\r\n    return this.httpClient.get<GetResponseProducts>(searchUrl).pipe(map(response => response._embedded.products));\r\n  }\r\n\r\n\r\n\r\n  // list products pagination method\r\n  getProductListPaginate(thePage: number, thePageSize: number,\r\n    theCategoryId: number): Observable<GetResponseProducts> {\r\n\r\n    // need to build URL based on category id, page number and page size\r\n\r\n    // Since Spring Data REST in the Product Repository class automatically exposes \r\n    // this endpoint -> \"http://localhost:8080/api/products/search/findByCategoryId\"\r\n\r\n    // so we build a dynamic search Url that takes in the user's click/input (as category id)\r\n\r\n    // since Spring Data REST supports pagination out of the box, just send the parameters\r\n    // for page and size and the pagination url is recognized for data retrieval\r\n    // http://localhost:8080/api/products?page=0&size=10\r\n\r\n    const searchUrl = `${this.baseUrl}/search/findByCategoryId?id=${theCategoryId}`\r\n      + `&page=${thePage}&size=${thePageSize}`;\r\n\r\n    return this.httpClient.get<GetResponseProducts>(searchUrl);\r\n\r\n  }\r\n\r\n\r\n  searchProducts(theKeyword: string): Observable<Product[]> {\r\n\r\n    // need to build URL based on user entered 'keyword'\r\n\r\n    const searchUrl = `${this.baseUrl}/search/findByNameContaining ? name = ${theKeyword} `;\r\n\r\n    // return this.httpClient.get<GetResponse>(this.baseUrl).pipe(\r\n    return this.getProducts(searchUrl);\r\n\r\n  }\r\n\r\n  // search products pagination method\r\n  searchProductsPaginate(thePage: number, thePageSize: number,\r\n    theKeyword: string): Observable<GetResponseProducts> {\r\n\r\n    // need to build URL based on category id, page number and page size\r\n\r\n    // Since Spring Data REST in the Product Repository class automatically exposes \r\n    // this endpoint -> \"http://localhost:8080/api/products/search/findByCategoryId\"\r\n\r\n    // so we build a dynamic search Url that takes in the user's click/input (as category id)\r\n\r\n    // since Spring Data REST supports pagination out of the box, just send the parameters\r\n    // for page and size and the pagination url is recognized for data retrieval\r\n    // http://localhost:8080/api/products?page=0&size=10\r\n\r\n    const searchUrl = `${this.baseUrl}/search/findByNameContaining?name=${theKeyword}`\r\n      + `&page=${thePage}&size=${thePageSize}`;\r\n\r\n    return this.httpClient.get<GetResponseProducts>(searchUrl);\r\n\r\n  }\r\n\r\n\r\n  // Returns an observable\r\n  // Maps the JSON data from Spring Data REST to ProductCategory array\r\n  // \"this.categoryUrl\" makes a call to the Spring Data REST API\r\n  getProductCategories(): Observable<ProductCategory[]> {\r\n\r\n    return this.httpClient.get<GetResponseProductCategory>(this.categoryUrl).pipe(\r\n      map(response => response._embedded.productCategory)\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\ninterface GetResponseProducts { // unwraps the JSON from Spring Data REST _embedded entry\r\n\r\n  _embedded: {\r\n    products: Product[];\r\n  },\r\n  // pagination\r\n  page: {\r\n    size: number, // size of current page\r\n    totalElements: number, // total 'count' of all elements in database, but not returning them\r\n    totalPages: number, // Total pages available\r\n    number: number // current page number\r\n  }\r\n}\r\n\r\n\r\n\r\ninterface GetResponseProductCategory { // unwraps the JSON from Spring Data REST _embedded entry\r\n\r\n  _embedded: {\r\n    productCategory: ProductCategory[];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Country } from 'src/app/common/country';\r\nimport { State } from 'src/app/common/state';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShopFormService {\r\n\r\n  private countriesUrl = 'http://localhost:8080/api/countries';\r\n  private statesUrl = 'http://localhost:8080/api/states';\r\n\r\n\r\n\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // our angular components will subscribe to these methods and \r\n  // receive this async data\r\n\r\n  getCreditCardMonths(startMonth: number): Observable<number[]> {\r\n\r\n    let data: number[] = [];\r\n\r\n    // build array for \"Month\" drop down list\r\n    // - start at current month and loop until\r\n\r\n    for (let theMonth = startMonth; theMonth <= 12; theMonth++) {\r\n\r\n      data.push(theMonth);\r\n    }\r\n\r\n    // the 'of' operator from rxjs will wrap an object as an observable\r\n    return of(data);\r\n  }\r\n\r\n  getCreditCardYears(): Observable<number[]> {\r\n\r\n    let data: number[] = [];\r\n\r\n    // build array for \"Year\" drop down list\r\n    // - start at current yera and loop for next 5 years\r\n\r\n    const startYear: number = new Date().getFullYear();\r\n    const endYear: number = startYear + 10;\r\n\r\n    for (let theYear = startYear; theYear <= endYear; theYear++) {\r\n\r\n      data.push(theYear);\r\n    }\r\n\r\n    // the 'of' operator from rxjs will wrap an object as an observable\r\n    return of(data);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // makes Spring Data REST API call and unwraps the countries from\r\n  // a JSON data package returned\r\n  getCountries(): Observable<Country[]> {\r\n\r\n    return this.httpClient.get<GetResponseCountries>(this.countriesUrl).pipe(\r\n\r\n      // map method imported from rxjs/operators\r\n      map(response => response._embedded.countries)\r\n    );\r\n  }\r\n\r\n\r\n\r\n  getStates(theCountryCode: string): Observable<State[]> {\r\n\r\n    // search url, retrieve states based on the country code -> \"IN\", \"US\", \"CA\"\r\n    const searchStatesUrl = `${this.statesUrl}/search/findByCountryCode?code=${theCountryCode}`;\r\n\r\n    return this.httpClient.get<GetResponseStates>(searchStatesUrl).pipe(\r\n\r\n      // map method imported from rxjs/operators\r\n      map(response => response._embedded.states)\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// this interface unwraps the JSON data from Spring Data REST _embedded entry\r\ninterface GetResponseCountries {\r\n\r\n  _embedded: {\r\n\r\n    countries: Country[];\r\n\r\n  }\r\n}\r\n\r\n// this interface unwraps the JSON data from Spring Data REST _embedded entry\r\ninterface GetResponseStates {\r\n\r\n  _embedded: {\r\n\r\n    states: State[];\r\n\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}