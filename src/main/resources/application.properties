##spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##spring.datasource.url=jdbc:mysql://localhost:3306/full-stack-ecommerce?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=UTC
##spring.datasource.username=xxxxxxxxxxxx
##spring.datasource.password=xxxxxxxxxxxx
##
##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
##
##spring.data.rest.base-path=/api
#
## Connect to heroku ClearDB MySql database
##spring.datasource.url=jdbc:mysql://${DBHOSTNAME}/${DBSCHEMA}
##spring.datasource.username=${DBUSERNAME}
##spring.datasource.password=${DBPASSWORD}
##
#
#
## ======================================
## = DATA SOURCE
## ======================================
#spring.datasource.url=jdbc:mysql://us-cdbr-east-02.cleardb.com/heroku_92efd6d9679fc50?reconnect=true
#spring.datasource.username=be96e865e4ccd2
#spring.datasource.password=3ea21ed4
#
## Keep connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
#
## =======================================
## JPA / HIBERNATE
## =======================================
#
## Use spring.jpa.properties.* for Hibernate native properties ( the prefix is
## stripped before adding them to the entity manager)
#
## Show or not log for each SQL query
#spring.jpa.show-sql=false
#
## Hibernate ddl auto (create, create-drop, update): with "update" the database
## schema will automatically update according to java entities found in the project
#spring.jpa.hibernate.ddl-auto=update
#
## Naming Strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#
##MySQL DIALECT
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
##spring.jpa.open-in-view=false
##server.port=3306
#
#
#
#
#
#spring.data.rest.base-path=/api
#
